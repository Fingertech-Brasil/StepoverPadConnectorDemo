<!DOCTYPE html>
<html data-lt-installed="true">

    <head>
        <title>Pad Connector</title>
        <meta name="ROBOTS" content="NOINDEX, NOFOLLOW">
        <meta charset="UTF-8">
        <meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <script src="Pad%20Connector_arquivos/jquery-1.7.2.min.js" type="text/javascript"></script>
        <script src="Pad%20Connector_arquivos/jquery.websocket.js" type="text/javascript"></script>
        <script src="Pad%20Connector_arquivos/signsocket.js" type="text/javascript"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js"
            integrity="sha512-z8IYLHO8bTgFqj+yrPyIJnzBDf7DDhWwiEsk4sY+Oe6J2M+WQequeGS7qioI5vT6rXgVRb4K1UVQC5ER7MKzKQ=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>

        <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js"></script>
        <script src="https://cdn.filesizejs.com/filesize.min.js"></script>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/css/all.min.css" rel="stylesheet" />

        <script src="https://cdn.tailwindcss.com"></script>
        <script type="text/javascript">

            var imageTimer;

            $.extend(signSocket.events, {

                onStaticAppletSignatureFinished: function (e) {

                    var status = e.data.value0;
                    var signsession = e.data.value1;

                    console.info("status: " + status + ", seign session: " + signsession);

                    clearInterval(imageTimer);
                    signSocket.signSocketStopSigning(true);

                }

            });

            function downloadImage() {
                var imageSrc = $("#signature-image").attr("src");
                $("#downloadImage").attr("href", imageSrc);
                $("#downloadImage").attr("download", "signature.png");
            }

            signSocket.init(function () {

                signSocket.signSocketExecuteDeviceSearch(function (ret) {

                    if (ret == 0) {
                        $("#search-info").text("PAD de Assinatura não encontrado, verifique se está conectado e tente novamente.");
                        $("#search-info").addClass("text-red-500");
                    }
                    if (ret == 1) {
                        signSocket.signSocketGet

                        $("#search-info").text("PAD de Assinatura encontrado");
                        $("#search-info").addClass("text-green-500");
                    }

                });
            });

            const { degrees, PDFDocument, rgb, StandardFonts } = PDFLib;


            async function addSignatureToPDF() {
                const fileUpload = document.getElementById('FileUpload');
                const signatureImage = document.getElementById('signature-image');

                if (fileUpload.files.length > 0 && signatureImage.src != "") {
                    const pdfDoc = await PDFDocument.load(await readFile(fileUpload.files[0]));
                    const response = await fetch(signatureImage.src);
                    const blob = await response.blob();
                    const pngImage = await pdfDoc.embedPng(await readFileAsDataURL(blob));

                    const pages = pdfDoc.getPages();
                    const firstPage = pages[0];

                    firstPage.drawImage(pngImage, {
                        x: firstPage.getWidth() - 150 - 10,
                        y: 35,
                        width: 150,
                        height: 60,
                    });

                    const pdfBytes = await pdfDoc.save();


                    const blobPDF = new Blob([pdfBytes], { type: 'application/pdf' });


                    const url = URL.createObjectURL(blobPDF);


                    const link = document.createElement('a');
                    link.href = url;
                    link.download = 'signed_document.pdf';


                    document.body.appendChild(link);


                    link.click();


                    document.body.removeChild(link);

                    return alert('Documento assinado com sucesso!');
                }

                downloadImage();

            }

            function readFile(file) {
                return new Promise((resolve, reject) => {
                    const reader = new FileReader();
                    reader.onload = (event) => resolve(new Uint8Array(event.target.result));
                    reader.onerror = (error) => reject(error);
                    reader.readAsArrayBuffer(file);
                });
            }

            function readFileAsDataURL(img) {
                return new Promise((resolve, reject) => {
                    const reader = new FileReader();
                    reader.onload = (event) => resolve(event.target.result);
                    reader.onerror = (error) => reject(error);
                    reader.readAsDataURL(img);
                });
            }


            $(document).ready(function () {
                $("#FileUpload").val("");

                $("#startSigning").click(function () {
                    signSocket.signSocketStartSigning(400, 400, 100, 100, 7200, 1, false, "signSession", 2000, function () {
                        imageTimer = setInterval(function () {
                            signSocket.signSocketGetSignatureImage(600, 300, false, function (image) {
                                $("#signature-image").attr("src", "data:image/png;base64," + image);
                            });
                        }, 200);

                    });

                });

                $("#stop").click(function () {
                    clearInterval(imageTimer);
                    signSocket.signSocketStopSigning(true);
                });

                $("#startViewing").click(function () {
                    startViewing(10);
                });

                $("#downloadImage").click(function () {
                    addSignatureToPDF();
                    // downloadImage();
                });

            });

        </script>
    </head>

    <body class=" select-none">
        <nav class="relative w-full shadow-lg top-0 py-5 px-10 "><img
                src="https://fingertech.com.br/content/img/logo.png" class="w-60" alt="FingerTech Logi"></nav>
        <div class="flex flex-col justify-center min-h-auto mt-16">
            <div class="  text-center  mb-10 ">
                <h3 class="text-2xl font-semibold">Verifique se o PAD está conectado</h3>

                <h5 id="search-info" class="mt-2">...</h5>

            </div>


            <div class=" grid grid-cols-2  p-10 gap-10 shadow-lg rounded-lg h-[400px] w-[80%] mx-auto mt-5">
                <div class="col-span-1 flex flex-col h-full items-center justify-between">
                    <div class="flex flex-col  w-full">
                        <div x-data="{ files: null }"
                            class="block w-full py-2 px-3 relative bg-white appearance-none border-2 border-gray-300 border-solid rounded-md hover:shadow-outline-gray">
                            <input type="file" multiple id="FileUpload"
                                class="absolute  cursor-pointer inset-0 z-50 m-0 p-0 w-full h-full outline-none opacity-0"
                                x-on:change="files = $event.target.files; console.log($event.target.files);"
                                x-on:dragover="$el.classList.add('active')"
                                x-on:dragleave="$el.classList.remove('active')"
                                x-on:drop="$el.classList.remove('active')">
                            <template x-if="files !== null">
                                <div class="flex flex-col space-y-1">
                                    <template x-for="(_,index) in Array.from({ length: files.length })">
                                        <div class="flex flex-row items-center space-x-2">
                                            <template x-if="files[index].type.includes('audio/')"><i
                                                    class="far fa-file-audio fa-fw"></i></template>
                                            <template x-if="files[index].type.includes('application/')"><i
                                                    class="far fa-file-alt fa-fw"></i></template>
                                            <template x-if="files[index].type.includes('image/')"><i
                                                    class="far fa-file-image fa-fw"></i></template>
                                            <template x-if="files[index].type.includes('video/')"><i
                                                    class="far fa-file-video fa-fw"></i></template>
                                            <span class="font-medium text-gray-900"
                                                x-text="files[index].name">Enviando</span>
                                            <span class="text-xs self-end text-gray-500"
                                                x-text="filesize(files[index].size)">...</span>
                                        </div>
                                    </template>
                                </div>
                            </template>
                            <template x-if="files === null">
                                <div class="flex flex-col space-y-2 items-center justify-center">
                                    <i class="fas fa-cloud-upload-alt fa-3x text-currentColor"></i>
                                    <p class="text-gray-700">Arraste seu arquivo pdf para está área.</p>
                                    <a href="javascript:void(0)"
                                        class="flex items-center mx-auto py-2 px-4 text-white text-center font-medium border border-transparent rounded-md outline-none bg-red-700">Selecione
                                        o arquivo</a>
                                </div>
                            </template>
                        </div>
                    </div>

                    <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js"></script>
                    <script src="https://cdn.filesizejs.com/filesize.min.js"></script>
                    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/css/all.min.css"
                        rel="stylesheet" />

                    <button id="startSigning"
                        class="py-2 px-6 border border-green-200 bg-green-200 shadow-lg rounded-lg w-full  hover:bg-green-100 hover:border hover:border-green-500 transform transition-all duration-100 ease-in-out ">Assinar</button>

                </div>


                <div class="col-span-1 relative">
                    <img id="signature-image" draggable="false" src="">
                    <a id="downloadImage"
                        class="absolute border border-white bottom-0 w-full rounded-lg text-center shadow-lg py-2 cursor-pointer hover:bg-neutral-100 hover:border hover:border-neutral-500 transform transition-all duration-100 ease-in-out">
                        Download</a>
                </div>

            </div>
        </div>



    </body>

</html>